---
description: 
globs: 
alwaysApply: true
---
---
description: Next.js 项目开发规范和最佳实践指导
globs: src/**/*.{ts,tsx,js,jsx,css,scss,md}, app/**/*.{ts,tsx,js,jsx,css,scss,md}, *.{ts,tsx,js,jsx,json,md}
---

# Next.js 项目开发规范

## 🌐 语言设置
- **始终使用中文进行回复和交流**
- 代码注释优先使用中文，但技术术语可保留英文
- 变量名、函数名、类名等使用英文，遵循驼峰命名法

## 🏗️ 项目架构规范

### Next.js 开发规范
- 使用 App Router (app/) 架构
- 所有页面组件使用 'use client' 指令（如需客户端功能）
- 优先使用 Server Components，除非需要客户端交互
- 使用 TypeScript 进行类型安全开发

### 组件开发规范
- 组件名使用 PascalCase
- 文件夹名使用 kebab-case
- 页面文件统一命名为 `page.tsx`
- 布局文件统一命名为 `layout.tsx`

### CSS 样式规范
- **强制使用 CSS Modules**：所有样式文件命名为 `*.module.css`
- CSS 类名使用 camelCase：如 `heroSection`, `contactBtn`
- 导入方式：`import styles from './styles.module.css'`
- 使用方式：`className={styles.className}` 或 `className={\`\${styles.class1} \${styles.class2}\`}`
- 避免内联样式，除非是动态样式

## 🎨 UI/UX 设计规范

### Ant Design 使用规范
- 统一使用 Ant Design 组件库
- 自定义样式通过 CSS Modules 覆盖
- 保持设计系统一致性

### 响应式设计
- 移动端优先设计
- 断点设置：480px, 768px, 1024px, 1200px
- 使用 CSS Grid 和 Flexbox 进行布局

### 颜色和主题
- 主色调：#1677ff (蓝色系)
- 背景色：#0a0f1a (深色主题)
- 文字色：#ffffff (主要文字)，#9ca3af (次要文字)
- 渐变效果：linear-gradient(135deg, #1677ff, #4096ff)

## 📝 代码质量规范

### TypeScript 规范
- 严格模式开启
- 必须显式声明类型，避免 `any`
- 使用接口定义复杂对象类型
- 组件 Props 必须定义接口

### 代码注释规范
- 重要功能必须添加中文注释
- 复杂逻辑添加行内注释
- 组件顶部添加功能说明注释

### 导入顺序规范
1. React 相关导入
2. 第三方库导入
3. 组件导入
4. 工具函数导入
5. 样式文件导入（最后）

## 🚀 性能优化规范

### 图片优化
- 强制使用 Next.js `<Image />` 组件
- 必须设置 width 和 height 属性
- 大图片使用懒加载

### 代码分割
- 页面级组件自动分割
- 大型组件使用动态导入
- 第三方库按需导入

## 🛡️ 安全和最佳实践

### 数据处理
- 用户输入必须验证和过滤
- 敏感信息不得硬编码
- API 调用添加错误处理

### 可访问性
- 图片必须添加 alt 属性
- 按钮和链接使用语义化标签
- 颜色对比度符合 WCAG 标准

## 📱 移动端优化

### 触摸体验
- 点击区域最小 44px
- 合理的触摸反馈
- 避免误触设计

### 性能优化
- 减少重绘和回流
- 优化动画性能
- 合理使用缓存

## 🔧 开发工具规范

### Git 提交规范
- feat: 新功能
- fix: 修复问题
- docs: 文档更新
- style: 样式调整
- refactor: 代码重构
- test: 测试相关
- chore: 构建工具或辅助工具的变动

### 代码格式化
- 使用 ESLint + Prettier
- 提交前自动格式化
- 严格遵循项目配置

## 🎯 开发目标

1. **代码质量**：可维护、可扩展、类型安全
2. **用户体验**：流畅、美观、易用
3. **性能优化**：快速加载、响应迅速
4. **团队协作**：规范统一、易于理解
5. **中文优先**：所有交流和文档使用中文

---

**重要提醒**：所有开发过程中的交流、代码审查、问题讨论均使用中文进行。这有助于团队更好地理解和协作。
